---
- name: Criação de máquina para aplicação python
  hosts: localhost
  connection: local
  gather_facts: false

  vars:
    gcp_project: isaac-engenharia-de-redes
    gcp_cred_kind: serviceaccount
    gcp_cred_file: gcp.json
    vm_name: web-isaac-sartori
    zone: "us-central1-a"
    region: "us-central1"
    aluno: "isaac-sartori"

  tasks:
    - name: Instalando pip
      apt:
        name:
          - python-pip
          - python3-pip
        state: latest

    - name: Instalar dependências
      pip:
        name: 
          - requests
          - google-auth

    - name: Criando disco da VM
      gcp_compute_disk:
        name: "disk-{{aluno}}"
        size_gb: 20
        source_image: projects/ubuntu-os-cloud/global/images/family/ubuntu-1804-lts
        zone: "{{zone}}"
        project: "{{ gcp_project }}"
        auth_kind: "{{ gcp_cred_kind }}"
        service_account_file: "{{ gcp_cred_file }}"
        state: present
      register: disk

    - name: Obtendo informações de rede
      gcp_compute_network_info:
        filters:
          - name = default
        project: "{{ gcp_project }}"
        auth_kind: "{{ gcp_cred_kind }}"
        service_account_file: "{{ gcp_cred_file }}"
      register: network

    - name: Criando endereço externo
      gcp_compute_address:
        name: "address-{{aluno}}"
        region: "{{region}}"
        project: "{{ gcp_project }}"
        auth_kind: "{{ gcp_cred_kind }}"
        service_account_file: "{{ gcp_cred_file }}"
        state: present
      register: address

    - name: Criando regra de firewall permitindo http
      gcp_compute_firewall:
        name: allow-http
        allowed:
          - ip_protocol: tcp
            ports:
              - "80"
        network: "{{ network }}"
        source_ranges:
          - "0.0.0.0/0"
        project: "{{ gcp_project }}"
        auth_kind: "{{ gcp_cred_kind }}"
        service_account_file: "{{ gcp_cred_file }}"

    - name: Criando instância da VM
      gcp_compute_instance:
        name: "{{vm_name}}"
        machine_type: n2-standard-2
        disks:
          - auto_delete: 'true'
            boot: 'true'
            source: "{{ disk }}"
        labels:
          environment: production
        network_interfaces:
          - network: "{{ network }}"
            access_configs:
              - name: External NAT
                nat_ip: "{{ address }}"
                type: ONE_TO_ONE_NAT
        zone: "{{zone}}"
        project: "{{gcp_project}}"
        auth_kind: "{{ gcp_cred_kind }}"
        service_account_file: "{{ gcp_cred_file }}"
        state: present

    - name: Aguardando SSH da VM
      wait_for:
        host: "{{ address.address }}"
        port: 22
        delay: 10

    - name: Cadastrar VM no inventario
      add_host:
        hostname: "{{ address.address }}"
        groupname: webs
  
- name: Configuração da nova VM para a aplicacao python
  hosts: webs
  tasks:
    - name: Rodando teste do hostname na VM
      shell: hostname
      register: saida
    - name: Exibindo saida do teste
      debug:
        var: saida
  
    - name: Instalando Docker
      shell: |
        curl -fsSL https://get.docker.com -o get-docker.sh
        sh get-docker.sh

    - name: Atualizando pacotes
      apt:
        update_cache: true

    - name: Instalando pip
      apt:
        name:
          - python-pip
          - python3-pip
        state: latest

    - name: Instalar dependências
      pip:
        name: 
          - docker
        
    - name: Criando container da aplicacao python
      docker_container:
        name: app-web-python
        image: "isaacrsjr/app-web"
        state: started
        recreate: true
        published_ports:
          - 80:80



